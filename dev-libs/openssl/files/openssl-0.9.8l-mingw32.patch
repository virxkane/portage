diff -urBbN openssl-0.9.8l-orig/Configure openssl-0.9.8l/Configure
--- openssl-0.9.8l-orig/Configure	2009-11-05 15:07:06 +0300
+++ openssl-0.9.8l/Configure	2010-01-06 02:20:16 +0300
@@ -480,7 +480,7 @@
 "BC-32","bcc32::::WIN32::BN_LLONG DES_PTR RC4_INDEX EXPORT_VAR_AS_FN:${no_asm}:win32",
 
 # MinGW
-"mingw", "gcc:-mno-cygwin -DL_ENDIAN -fomit-frame-pointer -O3 -march=i486 -Wall -D_WIN32_WINNT=0x333:::MINGW32:-lwsock32 -lgdi32:BN_LLONG ${x86_gcc_des} ${x86_gcc_opts} EXPORT_VAR_AS_FN:${x86_coff_asm}:win32:cygwin-shared:-D_WINDLL -DOPENSSL_USE_APPLINK:-mno-cygwin -shared:.dll.a",
+"mingw", "gcc:-mno-cygwin -DL_ENDIAN -fomit-frame-pointer -O3 -march=i686 -Wall -D_WIN32_WINNT=0x333:::MINGW32:-lwsock32 -lgdi32:BN_LLONG ${x86_gcc_des} ${x86_gcc_opts} ${x86_coff_asm}:win32:cygwin-shared:-D_WINDLL -DOPENSSL_USE_APPLINK:-mno-cygwin -shared:.dll.a",
 
 # UWIN 
 "UWIN", "cc:-DTERMIOS -DL_ENDIAN -O -Wall:::UWIN::BN_LLONG ${x86_gcc_des} ${x86_gcc_opts}:${no_asm}:win32",
diff -urBbN openssl-0.9.8l-orig/ms/libcrypto.la openssl-0.9.8l/ms/libcrypto.la
--- openssl-0.9.8l-orig/ms/libcrypto.la	1970-01-01 03:00:00 +0300
+++ openssl-0.9.8l/ms/libcrypto.la	2010-01-06 02:20:17 +0300
@@ -0,0 +1,35 @@
+# libcrypto.la - a libtool library file
+# Generated by ltmain.sh - GNU libtool 1.5.24 (1.1220.2.455 2007/06/24 02:13:29)
+#
+# Please DO NOT delete this file!
+# It is necessary for linking the library.
+
+# The name that we can dlopen(3).
+dlname='../bin/libeay32.dll'
+
+# Names of this library.
+library_names='libcrypto.dll.a'
+
+# The name of the static archive.
+old_library='libcrypto.a'
+
+# Libraries that this one depends upon.
+dependency_libs='-lgdi32 -luser32 -lwsock32'
+
+# Version information for libcrypto.
+current=0
+age=0
+revision=0
+
+# Is this an already installed library?
+installed=yes
+
+# Should we warn about portability when linking against -modules?
+shouldnotlink=no
+
+# Files to dlopen/dlpreopen
+dlopen=''
+dlpreopen=''
+
+# Directory that this library needs to be installed in:
+libdir='/mingw/lib'
diff -urBbN openssl-0.9.8l-orig/ms/libssl.la openssl-0.9.8l/ms/libssl.la
--- openssl-0.9.8l-orig/ms/libssl.la	1970-01-01 03:00:00 +0300
+++ openssl-0.9.8l/ms/libssl.la	2010-01-06 02:20:17 +0300
@@ -0,0 +1,35 @@
+# libssl.la - a libtool library file
+# Generated by ltmain.sh - GNU libtool 1.5.24 (1.1220.2.455 2007/06/24 02:13:29)
+#
+# Please DO NOT delete this file!
+# It is necessary for linking the library.
+
+# The name that we can dlopen(3).
+dlname='../bin/libssl32.dll'
+
+# Names of this library.
+library_names='libssl.dll.a'
+
+# The name of the static archive.
+old_library='libssl.a'
+
+# Libraries that this one depends upon.
+dependency_libs='/mingw/lib/libcrypto.la'
+
+# Version information for libssl.
+current=0
+age=0
+revision=0
+
+# Is this an already installed library?
+installed=yes
+
+# Should we warn about portability when linking against -modules?
+shouldnotlink=no
+
+# Files to dlopen/dlpreopen
+dlopen=''
+dlpreopen=''
+
+# Directory that this library needs to be installed in:
+libdir='/mingw/lib'
diff -urBbN openssl-0.9.8l-orig/util/mk1mf.pl openssl-0.9.8l/util/mk1mf.pl
--- openssl-0.9.8l-orig/util/mk1mf.pl	2008-12-03 02:50:21 +0300
+++ openssl-0.9.8l/util/mk1mf.pl	2010-01-06 02:20:17 +0300
@@ -46,6 +46,7 @@
 	"VC-WIN64A",  "Microsoft C/C++ - Win64/x64",
 	"VC-CE",   "Microsoft eMbedded Visual C++ 3.0 - Windows CE ONLY",
 	"VC-NT",   "Microsoft Visual C++ [4-6] - Windows NT ONLY",
+	"MSYS", "GNU C++ - Windows NT or 9x (bash shell)",
 	"Mingw32", "GNU C++ - Windows NT or 9x",
 	"Mingw32-files", "Create files with DOS copy ...",
 	"BC-NT",   "Borland C++ 4.5 - Windows NT",
@@ -150,6 +151,10 @@
 	$NT = 1 if $1 eq "NT";
 	require 'VC-32.pl';
 	}
+elsif ($platform eq "MSYS")
+	{
+	require 'msys.pl';
+	}
 elsif ($platform eq "Mingw32")
 	{
 	require 'Mingw32.pl';
diff -urBbN openssl-0.9.8l-orig/util/pl/msys.pl openssl-0.9.8l/util/pl/msys.pl
--- openssl-0.9.8l-orig/util/pl/msys.pl	1970-01-01 03:00:00 +0300
+++ openssl-0.9.8l/util/pl/msys.pl	2010-01-06 02:20:17 +0300
@@ -0,0 +1,101 @@
+#!/usr/local/bin/perl
+#
+# msys.pl -- MSYS/Mingw
+#
+
+$o='/';
+$cp='cp';
+$rm='rm -f';
+$mkdir='mkdir';
+
+# C compiler stuff
+
+$cc='gcc';
+if ($debug)
+	{ $cflags="-DL_ENDIAN -DDSO_WIN32 -g2 -ggdb"; }
+else
+	{ $cflags="-DL_ENDIAN -DDSO_WIN32 -fomit-frame-pointer -O3 -march=i686 -Wall"; }
+
+if ($gaswin and !$no_asm)
+	{
+        $bn_asm_obj='$(OBJ_D)/bn-win32.o';
+        $bn_asm_src='crypto/bn/asm/bn-win32.s';
+        $bnco_asm_obj='$(OBJ_D)/co-win32.o';
+        $bnco_asm_src='crypto/bn/asm/co-win32.s';
+        $des_enc_obj='$(OBJ_D)/d-win32.o $(OBJ_D)/y-win32.o';
+        $des_enc_src='crypto/des/asm/d-win32.s crypto/des/asm/y-win32.s';
+        $bf_enc_obj='$(OBJ_D)/b-win32.o';
+        $bf_enc_src='crypto/bf/asm/b-win32.s';
+#       $cast_enc_obj='$(OBJ_D)/c-win32.o';
+#       $cast_enc_src='crypto/cast/asm/c-win32.s';
+        $rc4_enc_obj='$(OBJ_D)/r4-win32.o';
+        $rc4_enc_src='crypto/rc4/asm/r4-win32.s';
+        $rc5_enc_obj='$(OBJ_D)/r5-win32.o';
+        $rc5_enc_src='crypto/rc5/asm/r5-win32.s';
+        $md5_asm_obj='$(OBJ_D)/m5-win32.o';
+        $md5_asm_src='crypto/md5/asm/m5-win32.s';
+        $rmd160_asm_obj='$(OBJ_D)/rm-win32.o';
+        $rmd160_asm_src='crypto/ripemd/asm/rm-win32.s';
+        $sha1_asm_obj='$(OBJ_D)/s1-win32.o';
+        $sha1_asm_src='crypto/sha/asm/s1-win32.s';
+	$cpuid_asm_obj='$(OBJ_D)/cpu-win32.o';
+	$cpuid_asm_src='crypto/cpu-win32.s';
+	$cflags.=" -DBN_ASM -DMD5_ASM -DSHA1_ASM -DOPENSSL_BN_ASM_PART_WORDS";
+	}
+
+
+$obj='.o';
+$ofile='-o ';
+
+# EXE linking stuff
+$link='${CC}';
+$lflags='${CFLAGS}';
+$efile='-o ';
+$exep='';
+$ex_libs="-lwsock32 -lgdi32";
+
+# static library stuff
+$mklib='ar r';
+$mlflags='';
+$ranlib='ranlib';
+$plib='lib';
+$libp=".a";
+$shlibp=".a";
+$lfile='';
+
+$asm='as';
+$afile='-o ';
+#$bn_asm_obj="";
+#$bn_asm_src="";
+#$des_enc_obj="";
+#$des_enc_src="";
+#$bf_enc_obj="";
+#$bf_enc_src="";
+
+sub do_lib_rule
+	{
+	local($obj,$target,$name,$shlib)=@_;
+	local($ret,$_,$Name);
+
+	$target =~ s/\//$o/g if $o ne '/';
+	$target="$target";
+	($Name=$name) =~ tr/a-z/A-Z/;
+
+	$ret.="$target: \$(${Name}OBJ)\n";
+	$ret.="\t\$(shell test -f $target && \$(RM) $target)\n";
+	$ret.="\t\$(MKLIB) $target \$(${Name}OBJ)\n";
+	$ret.="\t\$(RANLIB) $target\n\n";
+	}
+
+sub do_link_rule
+	{
+	local($target,$files,$dep_libs,$libs)=@_;
+	local($ret,$_);
+	
+	$file =~ s/\//$o/g if $o ne '/';
+	$n=&bname($target);
+	$ret.="$target: $files $dep_libs\n";
+	$ret.="\t\$(LINK) ${efile}$target \$(LFLAGS) $files $libs\n\n";
+	return($ret);
+	}
+1;

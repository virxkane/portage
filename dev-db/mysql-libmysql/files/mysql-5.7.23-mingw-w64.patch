diff -urBb mysql-5.7.23-orig/client/mysqltest.cc mysql-5.7.23/client/mysqltest.cc
--- mysql-5.7.23-orig/client/mysqltest.cc	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/client/mysqltest.cc	2018-10-20 20:14:59.048525000 +0400
@@ -9080,7 +9080,11 @@
     my_set_exception_pointers(exp);
     signal_handler(exp->ExceptionRecord->ExceptionCode);
   }
+#ifdef _MSC_VER
   __except(EXCEPTION_EXECUTE_HANDLER)
+#else
+  catch(...)
+#endif
   {
     fputs("Got exception in exception handler!\n", stderr);
   }
diff -urBb mysql-5.7.23-orig/cmake/merge_archives.cmake.in mysql-5.7.23/cmake/merge_archives.cmake.in
--- mysql-5.7.23-orig/cmake/merge_archives.cmake.in	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/cmake/merge_archives.cmake.in	2018-10-20 11:24:52.379508900 +0400
@@ -21,6 +21,7 @@
 SET(APPLE   "@APPLE@")
 SET(LINUX   "@LINUX@")
 SET(MSVC    "@MSVC@")
+SET(MINGW   "@MINGW@")
 SET(SOLARIS "@SOLARIS@")
 SET(UNIX    "@UNIX@")
 
@@ -101,7 +102,7 @@
   EXECUTE_PROCESS(
     COMMAND /usr/bin/libtool -static -o ${TARGET_LOC} ${LIB_LOCATIONS}
     )
-ELSEIF(LINUX)
+ELSEIF(LINUX OR MINGW)
   # First create a "thin" archive, then convert it to a normal one.
   SET(CONTENT "create ${TARGET_LOC}\n")
   SET(CONTENT "${CONTENT}addlib ${TARGET_LOC}\n")
diff -urBb mysql-5.7.23-orig/cmake/os/Windows.cmake mysql-5.7.23/cmake/os/Windows.cmake
--- mysql-5.7.23-orig/cmake/os/Windows.cmake	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/cmake/os/Windows.cmake	2018-10-20 10:29:45.506517200 +0400
@@ -32,8 +32,10 @@
 # avoid running system checks by using pre-cached check results
 # system checks are expensive on VS since every tiny program is to be compiled in 
 # a VC solution.
-GET_FILENAME_COMPONENT(_SCRIPT_DIR ${CMAKE_CURRENT_LIST_FILE} PATH)
-INCLUDE(${_SCRIPT_DIR}/WindowsCache.cmake)
+IF(MSVC)
+  GET_FILENAME_COMPONENT(_SCRIPT_DIR ${CMAKE_CURRENT_LIST_FILE} PATH)
+  INCLUDE(${_SCRIPT_DIR}/WindowsCache.cmake)
+ENDIF(MSVC)
 
 # We require at least Visual Studio 2013 (aka 12.0) which has version nr 1800.
 IF(NOT FORCE_UNSUPPORTED_COMPILER AND MSVC_VERSION LESS 1800)
diff -urBb mysql-5.7.23-orig/CMakeLists.txt mysql-5.7.23/CMakeLists.txt
--- mysql-5.7.23-orig/CMakeLists.txt	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/CMakeLists.txt	2018-10-20 10:41:33.688055900 +0400
@@ -643,7 +643,7 @@
 
 IF(WITH_UNIT_TESTS)
   # Visual Studio 11 needs this extra flag in order to compile gmock.
-  IF(WIN32)
+  IF(MSVC)
     ADD_DEFINITIONS( /D _VARIADIC_MAX=10 )
   ENDIF()
   # libc++ doesn't have tuple in tr1
diff -urBb mysql-5.7.23-orig/configure.cmake mysql-5.7.23/configure.cmake
--- mysql-5.7.23-orig/configure.cmake	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/configure.cmake	2018-10-20 19:20:44.066098000 +0400
@@ -42,6 +42,14 @@
   ENDIF()
 ENDIF()
 
+IF(MINGW)
+  # for localtime_r() & gmtime_r()
+  ADD_DEFINITIONS(-D_POSIX_C_SOURCE)
+  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fpermissive")
+  # Sun RPC (rapid/plugin/group_replication/libmysqlgcs/src/bindings/xcom)
+  ADD_DEFINITIONS(-DLITTLEENDIAN=1)
+  ADD_DEFINITIONS(-DMINGW_HAS_SECURE_API)
+ENDIF(MINGW)
 
 IF(CMAKE_SYSTEM_NAME MATCHES "SunOS" AND CMAKE_COMPILER_IS_GNUCXX)
   ## We will be using gcc to generate .so files
@@ -589,6 +597,7 @@
 }" HAVE_BUILTIN_EXPECT)
 
 # GCC has __builtin_stpcpy but still calls stpcpy
+IF(NOT WIN32)
 IF(NOT CMAKE_SYSTEM_NAME MATCHES "SunOS" OR NOT CMAKE_COMPILER_IS_GNUCC)
 CHECK_C_SOURCE_COMPILES("
 int main()
@@ -599,6 +608,7 @@
   return 0;
 }" HAVE_BUILTIN_STPCPY)
 ENDIF()
+ENDIF()
 
 CHECK_CXX_SOURCE_COMPILES("
   int main()
diff -urBb mysql-5.7.23-orig/include/m_string.h mysql-5.7.23/include/m_string.h
--- mysql-5.7.23-orig/include/m_string.h	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/include/m_string.h	2018-10-20 21:59:16.298442200 +0400
@@ -120,7 +120,7 @@
 
 static inline ulonglong my_strtoull(const char *nptr, char **endptr, int base)
 {
-#if defined _WIN32
+#if defined(_WIN32) && !defined(__MINGW32__)
   return _strtoui64(nptr, endptr, base);
 #else
   return strtoull(nptr, endptr, base);
@@ -129,7 +129,7 @@
 
 static inline char *my_strtok_r(char *str, const char *delim, char **saveptr)
 {
-#if defined _WIN32
+#if defined(_WIN32)
   return strtok_s(str, delim, saveptr);
 #else
   return strtok_r(str, delim, saveptr);
diff -urBb mysql-5.7.23-orig/include/my_dir.h mysql-5.7.23/include/my_dir.h
--- mysql-5.7.23-orig/include/my_dir.h	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/include/my_dir.h	2018-10-20 11:54:31.506390900 +0400
@@ -27,7 +27,9 @@
 	/* Defines for my_dir and my_stat */
 
 #ifdef _WIN32
+#ifndef S_IROTH
 #define S_IROTH _S_IREAD
+#endif
 #define S_IFIFO _S_IFIFO
 #endif
 
diff -urBb mysql-5.7.23-orig/include/my_global.h mysql-5.7.23/include/my_global.h
--- mysql-5.7.23-orig/include/my_global.h	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/include/my_global.h	2018-10-20 11:40:09.401050000 +0400
@@ -115,10 +115,12 @@
 #undef SIZEOF_OFF_T
 #define SIZEOF_OFF_T 8
 
+#ifndef HAVE_SLEEP
 static inline void sleep(unsigned long seconds)
 {
   Sleep(seconds * 1000);
 }
+#endif
 
 /* Define missing access() modes. */
 #define F_OK 0
@@ -216,9 +218,15 @@
 C_MODE_END
 #ifdef _WIN32
 typedef int       socket_len_t;
+#ifndef _SIGSET_T_
 typedef int       sigset_t;
+#endif
+#ifndef _MODE_T_
 typedef int       mode_t;
+#endif
+#ifndef _SSIZE_T_DEFINED
 typedef SSIZE_T   ssize_t;
+#endif
 #else
 typedef socklen_t socket_len_t;
 #endif
@@ -470,7 +478,7 @@
 
 #define NullS		(char *) 0
 
-#ifdef _WIN32
+#if defined(_WIN32) && defined(_MSC_VER)
 #define STDCALL __stdcall
 #else
 #define STDCALL
@@ -656,6 +664,8 @@
 
 
 #ifdef _WIN32
+#ifndef __MINGW64_VERSION_MAJOR
+// mingw-w64 already define this functions
 /****************************************************************************
 ** Replacements for localtime_r and gmtime_r
 ****************************************************************************/
@@ -671,6 +681,7 @@
   gmtime_s(res, clock);
   return res;
 }
+#endif /* __MINGW64_VERSION_MAJOR */
 #endif /* _WIN32 */
 
 #ifndef HAVE_STRUCT_TIMESPEC /* Windows before VS2015 */
@@ -683,12 +694,14 @@
   FILETIME ft;
   __int64 i64;
  };
-
+// In mingw-w64 struct timespec already defined in <sys/timeb.h> which included in <time.h>
+#ifndef _TIMESPEC_DEFINED
 struct timespec {
   union ft64 tv;
   /* The max timeout value in millisecond for native_cond_timedwait */
   long max_timeout_msec;
 };
+#endif
 
 #endif /* !HAVE_STRUCT_TIMESPEC */
 
diff -urBb mysql-5.7.23-orig/include/mysql.h mysql-5.7.23/include/mysql.h
--- mysql-5.7.23-orig/include/mysql.h	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/include/mysql.h	2018-10-20 10:33:32.408791400 +0400
@@ -35,7 +35,7 @@
 #include <sys/types.h>
 #endif
 typedef char my_bool;
-#if !defined(_WIN32)
+#if !defined(_WIN32) || !defined(_MSC_VER)
 #define STDCALL
 #else
 #define STDCALL __stdcall
diff -urBb mysql-5.7.23-orig/libevent/WIN32-Code/win32.c mysql-5.7.23/libevent/WIN32-Code/win32.c
--- mysql-5.7.23-orig/libevent/WIN32-Code/win32.c	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/libevent/WIN32-Code/win32.c	2018-10-20 18:31:36.737079400 +0400
@@ -25,12 +25,16 @@
  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
+#ifdef HAVE_CONFIG_H
+#include "config.h"
+#else
 #ifdef _MSC_VER
 #include "./config.h"
 #else
 /* Avoid the windows/msvc thing. */
 #include "../config.h"
 #endif
+#endif
 
 #include <winsock2.h>
 #include <windows.h>
diff -urBb mysql-5.7.23-orig/libmysql/authentication_win/handshake.h mysql-5.7.23/libmysql/authentication_win/handshake.h
--- mysql-5.7.23-orig/libmysql/authentication_win/handshake.h	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/libmysql/authentication_win/handshake.h	2018-10-20 10:33:32.410792200 +0400
@@ -100,7 +100,7 @@
   Handshake(const char *ssp, side_t side);
   virtual ~Handshake();
 
-  int Handshake::packet_processing_loop();
+  int packet_processing_loop();
 
   bool virtual is_complete() const
   {
diff -urBb mysql-5.7.23-orig/libmysqld/CMakeLists.txt mysql-5.7.23/libmysqld/CMakeLists.txt
--- mysql-5.7.23-orig/libmysqld/CMakeLists.txt	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/libmysqld/CMakeLists.txt	2018-10-20 12:45:43.089684600 +0400
@@ -122,7 +122,7 @@
 
 # Fixes "C1128: number of sections exceeded object file format limit" in MSVC /MD
 # The flag /bigobj is not added if the build is not /MD
-IF(WIN32 AND CMAKE_SIZEOF_VOID_P MATCHES 8)
+IF(MSVC AND CMAKE_SIZEOF_VOID_P MATCHES 8)
   FOREACH(flag 
      CMAKE_C_FLAGS_RELEASE    CMAKE_C_FLAGS_RELWITHDEBINFO 
      CMAKE_C_FLAGS_DEBUG      CMAKE_C_FLAGS_DEBUG_INIT 
diff -urBb mysql-5.7.23-orig/mysys/CMakeLists.txt mysql-5.7.23/mysys/CMakeLists.txt
--- mysql-5.7.23-orig/mysys/CMakeLists.txt	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/mysys/CMakeLists.txt	2018-10-20 15:47:07.662019200 +0400
@@ -74,6 +74,10 @@
   TARGET_LINK_LIBRARIES(mysys pthread)
 ENDIF()
 
+IF(MINGW)
+  TARGET_LINK_LIBRARIES(mysys -ldbghelp)
+ENDIF()
+
 ADD_EXECUTABLE(thr_lock thr_lock.c)
 TARGET_LINK_LIBRARIES(thr_lock mysys)
 SET_TARGET_PROPERTIES(thr_lock PROPERTIES COMPILE_FLAGS "-DMAIN")
diff -urBb mysql-5.7.23-orig/mysys/my_gethwaddr.c mysql-5.7.23/mysys/my_gethwaddr.c
--- mysql-5.7.23-orig/mysys/my_gethwaddr.c	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/mysys/my_gethwaddr.c	2018-10-20 10:33:32.412794600 +0400
@@ -138,6 +138,7 @@
 #define VOID void
 #endif
 
+#include <wincrypt.h>
 #include <iphlpapi.h>
 
 /*
diff -urBb mysql-5.7.23-orig/mysys/my_thr_init.c mysql-5.7.23/mysys/my_thr_init.c
--- mysql-5.7.23-orig/mysys/my_thr_init.c	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/mysys/my_thr_init.c	2018-10-20 10:33:32.416793800 +0400
@@ -53,8 +53,10 @@
 native_mutexattr_t my_errorcheck_mutexattr;
 #endif
 #ifdef _WIN32
+#ifdef _MSC_VER
 static void install_sigabrt_handler();
 #endif
+#endif
 
 #ifndef DBUG_OFF
 struct st_my_thread_var
@@ -299,8 +301,10 @@
     return TRUE; /* cannot proceed with unintialized library */
 
 #ifdef _WIN32
+#ifdef _MSC_VER
   install_sigabrt_handler();
 #endif
+#endif
 
 #ifndef DBUG_OFF
   if (mysys_thread_var())
@@ -436,6 +440,7 @@
 
 
 #ifdef _WIN32
+#ifdef _MSC_VER
 /*
   In Visual Studio 2005 and later, default SIGABRT handler will overwrite
   any unhandled exception filter set by the application  and will try to
@@ -456,4 +461,5 @@
   signal(SIGABRT,my_sigabrt_handler);
 }
 #endif
+#endif
 
diff -urBb mysql-5.7.23-orig/mysys/stacktrace.c mysql-5.7.23/mysys/stacktrace.c
--- mysql-5.7.23-orig/mysys/stacktrace.c	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/mysys/stacktrace.c	2018-10-20 10:33:32.420794500 +0400
@@ -551,15 +551,8 @@
 
 void my_safe_puts_stderr(const char *val, size_t len)
 {
-  __try
-  {
-    my_write_stderr(val, len);
-    my_safe_printf_stderr("%s", "\n");
-  }
-  __except(EXCEPTION_EXECUTE_HANDLER)
-  {
+  if (!my_write_stderr(val, len)) 
     my_safe_printf_stderr("%s", "is an invalid string pointer\n");
-  }
 }
 #endif /* _WIN32 */
 
@@ -568,9 +561,16 @@
 size_t my_write_stderr(const void *buf, size_t count)
 {
   DWORD bytes_written;
-  SetFilePointer(GetStdHandle(STD_ERROR_HANDLE), 0, NULL, FILE_END);
-  WriteFile(GetStdHandle(STD_ERROR_HANDLE), buf, (DWORD)count, &bytes_written, NULL);
-  return bytes_written;
+  HANDLE hnd = GetStdHandle(STD_ERROR_HANDLE);
+  if (NULL != hnd)
+  {
+	if (INVALID_SET_FILE_POINTER != SetFilePointer(hnd, 0, NULL, FILE_END))
+	{
+		if (WriteFile(hnd, buf, count, &bytes_written, NULL))
+			return (size_t)bytes_written;
+	}
+  }
+  return 0; 
 }
 #else
 size_t my_write_stderr(const void *buf, size_t count)
diff -urBb mysql-5.7.23-orig/rapid/plugin/group_replication/libmysqlgcs/src/bindings/xcom/xcom/windeps/include/endian.h mysql-5.7.23/rapid/plugin/group_replication/libmysqlgcs/src/bindings/xcom/xcom/windeps/include/endian.h
--- mysql-5.7.23-orig/rapid/plugin/group_replication/libmysqlgcs/src/bindings/xcom/xcom/windeps/include/endian.h	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/rapid/plugin/group_replication/libmysqlgcs/src/bindings/xcom/xcom/windeps/include/endian.h	2018-10-20 16:30:17.083582600 +0400
@@ -41,7 +41,7 @@
 #define __FLOAT_WORD_ORDER __BYTE_ORDER
 
 #else
-#error Can't make out endianness ...
+#error "Can't make out endianness ..."
 #endif /* BIGENDIAN */
 
 #endif /* LITTLEENDIAN */
diff -urBb mysql-5.7.23-orig/rapid/plugin/group_replication/libmysqlgcs/src/bindings/xcom/xcom/windeps/include/libintl.h mysql-5.7.23/rapid/plugin/group_replication/libmysqlgcs/src/bindings/xcom/xcom/windeps/include/libintl.h
--- mysql-5.7.23-orig/rapid/plugin/group_replication/libmysqlgcs/src/bindings/xcom/xcom/windeps/include/libintl.h	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/rapid/plugin/group_replication/libmysqlgcs/src/bindings/xcom/xcom/windeps/include/libintl.h	2018-10-20 18:08:12.932759700 +0400
@@ -34,6 +34,7 @@
 #include "win_i18n.h"
 
 #define __fxprintf(p, f, s) printf(p, f, s)
+#define __fxprintf(p, f, s, a) printf(p, f, s, a)
 
 #endif /* _LIBINTL_H */
 
diff -urBb mysql-5.7.23-orig/rapid/plugin/group_replication/libmysqlgcs/src/bindings/xcom/xcom/windeps/include/sys/missing_sys_types.h mysql-5.7.23/rapid/plugin/group_replication/libmysqlgcs/src/bindings/xcom/xcom/windeps/include/sys/missing_sys_types.h
--- mysql-5.7.23-orig/rapid/plugin/group_replication/libmysqlgcs/src/bindings/xcom/xcom/windeps/include/sys/missing_sys_types.h	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/rapid/plugin/group_replication/libmysqlgcs/src/bindings/xcom/xcom/windeps/include/sys/missing_sys_types.h	2018-10-20 16:24:23.515351200 +0400
@@ -44,13 +44,12 @@
 typedef unsigned int __u_int;
 typedef unsigned long __u_long;
 
-#if defined(WIN32)
-typedef long long int __quad_t;
-typedef unsigned long long int __u_quad_t;
-#endif
 #if defined(WIN64)
 typedef long int __quad_t;
 typedef unsigned long int __u_quad_t;
+#elif defined(WIN32)
+typedef long long int __quad_t;
+typedef unsigned long long int __u_quad_t;
 #endif
 typedef struct { int __val[2];} __fsid_t;
 
diff -urBb mysql-5.7.23-orig/rapid/plugin/group_replication/libmysqlgcs/src/bindings/xcom/xcom/windeps/sunrpc/xdr.c mysql-5.7.23/rapid/plugin/group_replication/libmysqlgcs/src/bindings/xcom/xcom/windeps/sunrpc/xdr.c
--- mysql-5.7.23-orig/rapid/plugin/group_replication/libmysqlgcs/src/bindings/xcom/xcom/windeps/sunrpc/xdr.c	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/rapid/plugin/group_replication/libmysqlgcs/src/bindings/xcom/xcom/windeps/sunrpc/xdr.c	2018-10-20 18:27:17.421792700 +0400
@@ -307,13 +307,13 @@
 }
 
 bool_t
-xdr_int64_t (XDR *xdrs, quad_t *llp)
+xdr_int64_t (XDR *xdrs, int64_t *llp)
 {
   return INTUSE(xdr_hyper) (xdrs, llp);
 }
 
 bool_t
-xdr_uint64_t (XDR *xdrs, u_quad_t *ullp)
+xdr_uint64_t (XDR *xdrs, uint64_t *ullp)
 {
   return INTUSE(xdr_u_hyper) (xdrs, ullp);
 }
diff -urBb mysql-5.7.23-orig/rapid/plugin/group_replication/libmysqlgcs/src/bindings/xcom/xcom/x_platform.h mysql-5.7.23/rapid/plugin/group_replication/libmysqlgcs/src/bindings/xcom/xcom/x_platform.h
--- mysql-5.7.23-orig/rapid/plugin/group_replication/libmysqlgcs/src/bindings/xcom/xcom/x_platform.h	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/rapid/plugin/group_replication/libmysqlgcs/src/bindings/xcom/xcom/x_platform.h	2018-10-20 16:26:22.875841200 +0400
@@ -64,8 +64,12 @@
 #define STDERR 2
 #endif
 
+#ifndef _MODE_T_
 typedef int mode_t;
+#endif
+#ifndef _SSIZE_T_DEFINED
 typedef SSIZE_T ssize_t;
+#endif
 
 #define _SHUT_RDWR SD_BOTH
 
diff -urBb mysql-5.7.23-orig/regex/main.c mysql-5.7.23/regex/main.c
--- mysql-5.7.23-orig/regex/main.c	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/regex/main.c	2018-10-20 12:33:47.186072100 +0400
@@ -25,7 +25,7 @@
 extern void regprint(my_regex_t *r, FILE *d);
 
 
-#ifdef _WIN32
+#if defined(_WIN32) && !defined(__GETOPT_H__)
 #define snprintf _snprintf
 char *optarg= "";
 int optind= 1;
diff -urBb mysql-5.7.23-orig/scripts/CMakeLists.txt mysql-5.7.23/scripts/CMakeLists.txt
--- mysql-5.7.23-orig/scripts/CMakeLists.txt	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/scripts/CMakeLists.txt	2018-10-20 12:18:37.168621400 +0400
@@ -24,7 +24,7 @@
   "${CMAKE_CXX_COMPILER_ID} ${CMAKE_CXX_COMPILER_VERSION}")
 
 # Build mysql_fix_privilege_tables.sql (concatenate 2 sql scripts)
-IF(NOT WIN32 OR CMAKE_CROSSCOMPILING)
+IF(NOT WIN32 OR MINGW OR CMAKE_CROSSCOMPILING)
   FIND_PROGRAM(CAT_EXECUTABLE cat DOC "path to the executable")
   MARK_AS_ADVANCED(CAT_EXECUTABLE)
 ENDIF()
diff -urBb mysql-5.7.23-orig/sql/CMakeLists.txt mysql-5.7.23/sql/CMakeLists.txt
--- mysql-5.7.23-orig/sql/CMakeLists.txt	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/sql/CMakeLists.txt	2018-10-20 20:17:31.973791300 +0400
@@ -317,7 +317,7 @@
 )
 
 # Fixes "C1128: number of sections exceeded object file format limit" in MSVC
-IF(WIN32 AND CMAKE_SIZEOF_VOID_P MATCHES 8)
+IF(MSVC AND CMAKE_SIZEOF_VOID_P MATCHES 8)
   ADD_COMPILE_FLAGS(item_geofunc_setops.cc COMPILE_FLAGS "/bigobj")
 ENDIF()
 
@@ -640,7 +640,7 @@
 MYSQL_ADD_PLUGIN(locking_service locking_service_udf.cc
                  MODULE_ONLY MODULE_OUTPUT_NAME "locking_service")
 IF(NOT DISABLE_SHARED)
-  IF(WIN32)
+  IF(MSVC)
     SET_TARGET_PROPERTIES(locking_service
       PROPERTIES LINK_FLAGS
       "/DEF:${CMAKE_CURRENT_SOURCE_DIR}/locking_service.def")
diff -urBb mysql-5.7.23-orig/sql/item_strfunc.cc mysql-5.7.23/sql/item_strfunc.cc
--- mysql-5.7.23-orig/sql/item_strfunc.cc	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/sql/item_strfunc.cc	2018-10-20 12:08:29.326237400 +0400
@@ -5170,7 +5170,7 @@
         with a clock_seq value (initialized random below), we use a separate
         randominit() here
       */
-      randominit(&uuid_rand, tmp + (ulong) thd, tmp + (ulong)global_query_id);
+      randominit(&uuid_rand, tmp + (ulonglong) thd, tmp + (ulong)global_query_id);
       for (i=0; i < (int)sizeof(mac); i++)
         mac[i]=(uchar)(my_rnd(&uuid_rand)*255);
       /* purecov: end */    
diff -urBb mysql-5.7.23-orig/sql/mysqld.cc mysql-5.7.23/sql/mysqld.cc
--- mysql-5.7.23-orig/sql/mysqld.cc	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/sql/mysqld.cc	2018-10-20 16:01:39.935266900 +0400
@@ -1913,7 +1913,11 @@
     my_set_exception_pointers(ex_pointers);
     handle_fatal_signal(ex_pointers->ExceptionRecord->ExceptionCode);
   }
+#ifdef _MSC_VER
   __except(EXCEPTION_EXECUTE_HANDLER)
+#else
+  catch (...)
+#endif
   {
     DWORD written;
     const char msg[] = "Got exception in exception handler!\n";
@@ -5354,7 +5358,7 @@
         if (my_strcasecmp(system_charset_info, argv[1],"mysql"))
           load_default_groups[load_default_groups_sz-2]= argv[1];
         windows_service= true;
-        Service.Init(argv[1], mysql_service);
+        Service.Init(argv[1], (void*)mysql_service);
         return 0;
       }
     }
@@ -5375,7 +5379,7 @@
         windows_service= true;
         if (my_strcasecmp(system_charset_info, argv[2],"mysql"))
           load_default_groups[load_default_groups_sz-2]= argv[2];
-        Service.Init(argv[2], mysql_service);
+        Service.Init(argv[2], (void*)mysql_service);
         return 0;
       }
     }
@@ -5408,7 +5412,7 @@
     {
       /* start the default service */
       windows_service= true;
-      Service.Init(MYSQL_SERVICENAME, mysql_service);
+      Service.Init(MYSQL_SERVICENAME, (void*)mysql_service);
       return 0;
     }
   }
diff -urBb mysql-5.7.23-orig/sql/opt_range.cc mysql-5.7.23/sql/opt_range.cc
--- mysql-5.7.23-orig/sql/opt_range.cc	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/sql/opt_range.cc	2018-10-20 22:28:21.776747200 +0400
@@ -9433,7 +9433,7 @@
   if (e_count != elements)
   {
     sql_print_warning("Wrong use count: %u (should be %u) for tree at 0x%lx",
-                      e_count, elements, (long unsigned int) this);
+                      e_count, elements, (ulonglong) this);
     // DBUG_ASSERT(false); // Todo - enable and clean up mess
     return true;
   }
diff -urBb mysql-5.7.23-orig/sql/sql_class.cc mysql-5.7.23/sql/sql_class.cc
--- mysql-5.7.23-orig/sql/sql_class.cc	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/sql/sql_class.cc	2018-10-20 12:23:10.861157800 +0400
@@ -1541,7 +1541,7 @@
   {
     ulong tmp;
     tmp= sql_rnd_with_mutex();
-    randominit(&rand, tmp + (ulong) &rand, tmp + (ulong) ::global_query_id);
+    randominit(&rand, tmp + (ulonglong) &rand, tmp + (ulong) ::global_query_id);
   }
 
   server_status= SERVER_STATUS_AUTOCOMMIT;
diff -urBb mysql-5.7.23-orig/sql/sql_show.cc mysql-5.7.23/sql/sql_show.cc
--- mysql-5.7.23-orig/sql/sql_show.cc	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/sql/sql_show.cc	2018-10-20 12:26:38.309286600 +0400
@@ -2871,7 +2871,7 @@
   switch (show_type)
   {
     case SHOW_DOUBLE_STATUS:
-      value= ((char *) status_var + (ulong) value);
+      value= ((char *) status_var + (ulonglong) value);
       /* fall through */
 
     case SHOW_DOUBLE:
@@ -2881,7 +2881,7 @@
       break;
 
     case SHOW_LONG_STATUS:
-      value= ((char *) status_var + (ulong) value);
+      value= ((char *) status_var + (ulonglong) value);
       /* fall through */
 
     case SHOW_LONG:
@@ -2897,7 +2897,7 @@
       break;
 
     case SHOW_LONGLONG_STATUS:
-      value= ((char *) status_var + (ulong) value);
+      value= ((char *) status_var + (ulonglong) value);
       /* fall through */
 
     case SHOW_LONGLONG:
@@ -2962,13 +2962,13 @@
     }
 
     case SHOW_KEY_CACHE_LONG:
-      value= (char*) dflt_key_cache + (ulong)value;
+      value= (char*) dflt_key_cache + (ulonglong)value;
       end= int10_to_str(*(long*) value, buff, 10);
       value_charset= system_charset_info;
       break;
 
     case SHOW_KEY_CACHE_LONGLONG:
-      value= (char*) dflt_key_cache + (ulong)value;
+      value= (char*) dflt_key_cache + (ulonglong)value;
       end= longlong10_to_str(*(longlong*) value, buff, 10);
       value_charset= system_charset_info;
       break;
diff -urBb mysql-5.7.23-orig/sql-common/client.c mysql-5.7.23/sql-common/client.c
--- mysql-5.7.23-orig/sql-common/client.c	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/sql-common/client.c	2018-10-20 16:09:22.562481500 +0400
@@ -163,7 +163,7 @@
 const char	*not_error_sqlstate= "00000";
 const char	*cant_connect_sqlstate= "08001";
 #if defined (_WIN32) && !defined (EMBEDDED_LIBRARY)
-char		 *shared_memory_base_name= 0;
+static char		 *shared_memory_base_name= 0;
 const char 	*def_shared_memory_base_name= default_shared_memory_base_name;
 #endif
 
diff -urBb mysql-5.7.23-orig/unittest/gunit/CMakeLists.txt mysql-5.7.23/unittest/gunit/CMakeLists.txt
--- mysql-5.7.23-orig/unittest/gunit/CMakeLists.txt	2018-06-08 13:56:29.000000000 +0400
+++ mysql-5.7.23/unittest/gunit/CMakeLists.txt	2018-10-20 12:46:34.488557600 +0400
@@ -368,7 +368,7 @@
     )
   ENDIF()
   # Fixes "C1128: number of sections exceeded object file format limit" in MSVC
-  IF(WIN32)
+  IF(MSVC)
     ADD_COMPILE_FLAGS(
       ${MERGE_LARGE_TESTS}
       COMPILE_FLAGS "/bigobj")

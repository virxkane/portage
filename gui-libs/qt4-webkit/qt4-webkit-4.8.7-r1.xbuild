# Copyright 1999-2012 Gentoo Foundation
# Copyright 2013-2015 Chernov A.A.
# Distributed under the terms of the GNU General Public License v2

DESCRIPTION="The WebKit module for the Qt toolkit"

HOMEPAGE="http://qt-project.org/ http://qt.digia.com/"

LICENSE="LGPL-2.1 GPL-3"

# make from old MSYS 1.0 failed to build this package, please use MSYS2.

RDEPEND="gui-libs/qt4"

MY_P=qt-everywhere-opensource-src-${PV}

SRC_URI="http://download.qt.io/official_releases/qt/4.8/${PV}/${MY_P}.tar.gz"

SOURCES_DIR="${MY_P}"

QT4_TARGET_DIRECTORIES="
		src/3rdparty/webkit/Source
		tools/designer/src/plugins/qwebview"

src_unpack()
{
	QT4_EXTRACT_DIRECTORIES="
			include
			src
			tools"

	local tarball="${MY_P}.tar.gz"
	local target=
	local targets=
	# tools/shared src/3rdparty/{md4,md5,sha1}
	for target in configure configure.exe LICENSE.GPL3 LICENSE.LGPL projects.pro \
		src/{qbase,qt_targets,qt_install}.pri bin config.tests \
		mkspecs qmake \
		${QT4_EXTRACT_DIRECTORIES}
	do
		targets="${targets} ${MY_P}/${target} "
	done

	local f=
	for f in ${A}
	do
		if [ "$f" = "${tarball}" ]
		then
			ebegin "Unpacking parts of ${tarball}: "
			f=`find_srcpackage ${tarball}`
			tar -xzf ${f} ${targets} > /dev/null 2>&1
			if [ $? -eq 0 ]
			then
				eend "OK"
			else
				eend "failed"
				eerror "failed to unpack"
			fi
			# if tar remove 'configure.exe'
			if [ ! -f "${SOURCES_DIR}/configure.exe" ]
			then
				tar -xzf ${f} "${SOURCES_DIR}/configure.exe" > /dev/null 2>&1
			fi
			cd "${MY_P}" || eerror "failed to cd to source dir :("
			rm -rf "src/3rdparty/webkit/Source/WebKit/qt/tests/"
		else
			unpack $f
		fi
	done

	# copy tool & libs
	mkdir lib
	cp -p ${PREFIX}/bin/{qmake,moc,rcc,uic}.exe ./bin/
	cp -p ${PREFIX}/lib/qt4/libQt{Core,Xml,Gui,XmlPatterns,Network,Designer,Script,Declarative,Test}4.a ./lib/
	cp -pv ./lib/libQtCore4.a ./lib/libQtCore.a
	cp -pv ./lib/libQtXml4.a ./lib/libQtXml.a
	cp -pv ./lib/libQtGui4.a ./lib/libQtGui.a
	cp -pv ./lib/libQtXmlPatterns4.a ./lib/libQtXmlPatterns.a
	cp -pv ./lib/libQtNetwork4.a ./lib/libQtNetwork.a
	cp -pv ./lib/libQtDesigner4.a ./lib/libQtDesigner.a
	cp -pv ./lib/libQtScript4.a ./lib/libQtScript.a
	cp -pv ./lib/libQtDeclarative4.a ./lib/libQtDeclarative.a
	cp -pv ./lib/libQtTest4.a ./lib/libQtTest.a
}

src_prepare()
{
	epatch "qt4-${PV}-gcc6.patch"
}

src_configure()
{
	local _prefix="${INSTDIR}${PREFIX}"
	install -d "${_prefix}"

	local _prefix_w=`posix_w32path "${_prefix}"`
	_prefix_w=`echo ${_prefix_w} | sed -e 's/\\//\\\/g'`

	local prefix_w=`posix_w32path "${PREFIX}"`
	prefix_w=`echo ${prefix_w} | sed -e 's/\\//\\\/g'`

	local pwd_w=`posix_w32path .`
	pwd_w=`echo ${pwd_w} | sed -e 's/\\//\\\/g'`

	qt4-pathfix --prefix="${_prefix_w}" \
				--bindir="${_prefix_w}/bin" \
				--libdir="${_prefix_w}/lib/qt4" \
				--docdir="${_prefix_w}/share/doc/qt-${PV}" \
				--headerdir="${_prefix_w}/include/qt4" \
				--plugindir="${_prefix_w}/lib/qt4/plugins" \
				--importdir="${_prefix_w}/lib/qt4/imports" \
				--datadir="${_prefix_w}/share/qt4" \
				--translationdir="${_prefix_w}/share/qt4/translations" \
				--examplesdir="${_prefix_w}/share/qt4/examples" \
				--demosdir="${_prefix_w}/share/qt4/demos" \
				"./bin/qmake.exe"
	install -d "${INSTDIR}${PREFIX}/share/qt4/"
	cp -pr "mkspecs/" "${INSTDIR}${PREFIX}/share/qt4/"

	./configure.exe -prefix ${_prefix_w} -bindir "${_prefix_w}/bin" -libdir "${_prefix_w}/lib/qt4" \
		-docdir "${_prefix_w}/share/doc/qt-${PV}" -headerdir "${_prefix_w}/include/qt4" \
		-plugindir "${_prefix_w}/lib/qt4/plugins" -importdir "${_prefix_w}/lib/qt4/imports" \
		-datadir "${_prefix_w}/share/qt4" -translationdir "${_prefix_w}/share/qt4/translations" \
		-examplesdir "${_prefix_w}/share/qt4/examples" -demosdir "${_prefix_w}/share/qt4/demos" \
		-release -opensource -confirm-license -shared -ltcg -exceptions -rtti -accessibility -stl \
		-system-zlib \
		-webkit \
		-no-qmake -no-dsp -no-vcproj -fast -nomake examples -nomake demos \
		-platform win32-g++-4.6
	if [ $? -eq 0 ]
	then
		einfo "configure successfull"
	else
		eerror "configure failed"
	fi
}

src_compile()
{
	local dir=
	local pwd1=`pwd`
	for dir in ${QT4_TARGET_DIRECTORIES}
	do
		cd ${dir} || eerror "Can't cd to dir ${dir}"
		emake
		cd ${pwd1}
	done

	if [ ! -f "${WORKDIR}/${SOURCES_DIR}/lib/libQtWebKit4.a" ]
	then
		eerror "build failed!"
	fi
}

src_install()
{
	local dir=
	local pwd1=`pwd`
	for dir in ${QT4_TARGET_DIRECTORIES}
	do
		cd ${dir} || eerror "Can't cd to dir ${dir}"
		make install
		if [ $? -eq 0 ]
		then
			eend "make install successfull."
		else
			eerror "make install failed!"
		fi
		cd ${pwd1}
	done

	rm -fv ${INSTDIR}${PREFIX}/lib/qt4/*.dll
	rm -rf ${INSTDIR}${PREFIX}/share/qt4/mkspecs/
}

# Copyright 1999-2012 Gentoo Foundation
# Copyright 2013 Chernov A.A.
# Distributed under the terms of the GNU General Public License v2

DESCRIPTION="The WebKit module for the Qt toolkit"

HOMEPAGE="http://qt-project.org/ http://qt.digia.com/"

LICENSE="LGPL-2.1 GPL-3"

# make from MSYS can't build this package, then we use mingw32-make & Windows shell to build.
# But with mingw32-make we lost parallel build feature.

#   dependencies:
# dev-util/mingw32-make
# gui-libs/qt4

MY_P=qt-everywhere-opensource-src-${PV}

SRC_URI="http://releases.qt-project.org/qt4/source/${MY_P}.tar.gz"

SOURCES_DIR="${MY_P}"

src_unpack()
{
	QT4_TARGET_DIRECTORIES="
			src/3rdparty/webkit/Source/JavaScriptCore
			src/3rdparty/webkit/Source/WebCore
			src/3rdparty/webkit/Source/WebKit/qt
			tools/designer/src/plugins/qwebview"
	
	QT4_EXTRACT_DIRECTORIES="
			include
			src
			tools"
	
	local tarball="${MY_P}.tar.gz"
	local target= targets=
	# tools/shared src/3rdparty/{md4,md5,sha1}
	for target in configure.exe LICENSE.GPL3 LICENSE.LGPL projects.pro \
		src/{qbase,qt_targets,qt_install}.pri bin config.tests \
		mkspecs qmake \
		${QT4_EXTRACT_DIRECTORIES}
	do
		targets+="${MY_P}/${target} "
	done
	
	ebegin "Unpacking parts of ${tarball}:" ${targets//${MY_P}\/}
	local f=`find_srcpackage ${tarball}`
	tar -xzf ${f} ${targets}
	if [ $? -eq 0 ]
	then
		eend "OK"
	else
		eend "failed"
		eerror "failed to unpack"
	fi
	cd "${MY_P}" || eerror "failed to cd to source dir :("
	
	# copy tool & libs
	mkdir lib
	cp -p ${PREFIX}/bin/{qmake,moc,rcc,uic}.exe ./bin/
	cp -p ${PREFIX}/lib/qt4/libQt{Core,Xml,Gui,XmlPatterns,Network,Designer,Script}4.a ./lib/
	cp -pv ./lib/libQtCore4.a ./lib/libQtCore.a
	cp -pv ./lib/libQtXml4.a ./lib/libQtXml.a
	cp -pv ./lib/libQtGui4.a ./lib/libQtGui.a
	cp -pv ./lib/libQtXmlPatterns4.a ./lib/libQtXmlPatterns.a
	cp -pv ./lib/libQtNetwork4.a ./lib/libQtNetwork.a
	cp -pv ./lib/libQtDesigner4.a ./lib/libQtDesigner.a
	cp -pv ./lib/libQtScript4.a ./lib/libQtScript.a
}

src_configure()
{
	local _prefix="${INSTDIR}${PREFIX}"
	install -d "${_prefix}"

	local _prefix_w=`posix_w32path "${_prefix}"`
	_prefix_w=`echo ${_prefix_w} | sed -e 's/\\//\\\/g'`

	local prefix_w=`posix_w32path "${PREFIX}"`
	prefix_w=`echo ${prefix_w} | sed -e 's/\\//\\\/g'`

	local pwd_w=`posix_w32path .`
	pwd_w=`echo ${pwd_w} | sed -e 's/\\//\\\/g'`

	echo "set PATH=%SystemRoot%\system32;%SystemRoot%;${prefix_w}\bin" > bqmake.cmd
	echo "${pwd_w}\\bin\\qmake.exe %1 %2 %3 %4 %5 %6 %7 %8 %9" >> bqmake.cmd
	echo "exit" >> bqmake.cmd
	
	echo "set PATH=%SystemRoot%\system32;%SystemRoot%;${prefix_w}\bin" > bmake.cmd
	echo "mingw32-make %1 %2 %3 %4 %5 %6 %7 %8 %9" >> bmake.cmd
	echo "exit" >> bmake.cmd
	
	echo "set PATH=%SystemRoot%\system32;%SystemRoot%;${prefix_w}\bin" > binstall.cmd
	echo "mingw32-make install" >> binstall.cmd
	echo "exit" >> binstall.cmd

	echo "set PATH=%SystemRoot%\system32;%SystemRoot%;${prefix_w}\bin" > bconfigure.cmd
	echo "configure.exe -prefix ${_prefix_w} -bindir \"${_prefix_w}/bin\" -libdir \"${_prefix_w}/lib/qt4\" \
		-docdir \"${_prefix_w}/share/doc/qt-${PV}\" -headerdir \"${_prefix_w}/include/qt4\" \
		-plugindir \"${_prefix_w}/lib/qt4/plugins\" -importdir \"${_prefix_w}/lib/qt4/imports\" \
		-datadir \"${_prefix_w}/share/qt4\" -translationdir \"${_prefix_w}/share/qt4/translations\" \
		-examplesdir \"${_prefix_w}/share/qt4/examples\" -demosdir \"${_prefix_w}/share/qt4/demos\" \
		-release -opensource -confirm-license -shared -ltcg -exceptions -rtti -accessibility -stl \
		-system-zlib \
		-webkit \
		-no-qmake -no-dsp -no-vcproj -fast -nomake examples -nomake demos \
		-platform win32-g++-4.6" >> bconfigure.cmd
	echo "exit" >> bconfigure.cmd

	cmd //C bconfigure.cmd
}

src_compile()
{
	local dir=
	local pwd1=`pwd`
	for dir in ${QT4_TARGET_DIRECTORIES}
	do
		cd ${dir} || eerror "Can't cd to dir ${dir}"
		einfo "\* Start to build \"${dir}\" in Windows shell..."
		cmd //C ${pwd1}/bmake.cmd
		einfo "\* Done building \"${dir}\""
		cd ${pwd1}		
	done

	if [ ! -f "${WORKDIR}/${SOURCES_DIR}/lib/libQtWebKit4.a" ]
	then
		eerror "build failed!"
	fi
}

src_install()
{
	local _prefix="${INSTDIR}${PREFIX}"
	local _prefix_w=`posix_w32path "${_prefix}"`

	qt4-pathfix --prefix="${_prefix_w}" \
				--bindir="${_prefix_w}/bin" \
				--libdir="${_prefix_w}/lib/qt4" \
				--docdir="${_prefix_w}/share/doc/qt-${PV}" \
				--headerdir="${_prefix_w}/include/qt4" \
				--plugindir="${_prefix_w}/lib/qt4/plugins" \
				--importdir="${_prefix_w}/lib/qt4/imports" \
				--datadir="${_prefix_w}/share/qt4" \
				--translationdir="${_prefix_w}/share/qt4/translations" \
				--examplesdir="${_prefix_w}/share/qt4/examples" \
				--demosdir="${_prefix_w}/share/qt4/demos" \
				"./bin/qmake.exe"

	local dir=
	local pwd1=`pwd`
	for dir in ${QT4_TARGET_DIRECTORIES}
	do
		cd ${dir} || eerror "Can't cd to dir ${dir}"
		cmd //C ${pwd1}/bqmake.cmd
		einfo "\* install \"${dir}\" in Windows shell..."
		cmd //C ${pwd1}/binstall.cmd
		einfo "\* Done installing \"${dir}\""
		cd ${pwd1}
	done

	rm -fv ${INSTDIR}${PREFIX}/lib/qt4/*.dll
}

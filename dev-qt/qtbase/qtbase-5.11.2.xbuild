# Copyright 2013-2018 Chernov A.A.
# This is a part of mingw-portage project: 
# http://sourceforge.net/projects/mingwportage/
# Distributed under the terms of the GNU General Public License v2

DESCRIPTION="Qt toolkit (base module)"

HOMEPAGE="http://www.qt.io/"

LICENSE="LGPL-2.1 GPL-3"

RESTRICT="strip"

DEPEND=">=dev-util/qt5-pathfix-0.1.2
		dev-lang/perl
		dev-util/pkg-config"
RDEPEND="sys-libs/zlib
		dev-libs/icu
		dev-libs/libpcre2
		media-libs/libpng
		meta-virtual/jpeg
		media-libs/harfbuzz
		media-libs/freetype
		media-libs/fontconfig
		dev-db/postgresql-libpq
		dev-db/mysql-libmysql || dev-db/mysql-connector-c
		>=dev-db/sqlite-3.23.1.0-r1
		sys-apps/dbus"

MY_P=${PN}-everywhere-src-${PV}

SRC_URI="http://download.qt.io/official_releases/qt/5.11/${PV}/submodules/${MY_P}.tar.xz"

# QTBUG-16443
SOURCES_DIR="qb"

PATH="${PERL_PATH}/bin":${PATH}

src_unpack()
{
	# QTBUG-16443
	unpack ${A}
	mv "${MY_P}" "${SOURCES_DIR}"
	cd "${SOURCES_DIR}" || eerror "Can't cd to sources directory!"
}

src_prepare()
{
	epatch "${P}-dbus-detect.patch"
	epatch "${P}-fontconfig-detect.patch"
}

src_configure()
{
	# add arguments to configure
	extra_cflags=`pkg-config --cflags freetype2 dbus-1`
	qt_add_includes=
	for flag in $extra_cflags
	do
		flag=`echo ${flag} | sed -e s'/^-I\(.*\)$/\1/'`
		if [ "${flag}" ]
		then
			qt_add_includes="${qt_add_includes} -I ${flag}"
		fi
	done
	unset -v extra_cflags
	unset -v flag

	local _prefix="${INSTDIR}${PREFIX}"
	install -d "${_prefix}"
	./configure \
			-prefix "${_prefix}" \
			-bindir "${_prefix}/bin/" \
			-libdir "${_prefix}/lib/qt5/" \
			-docdir "${_prefix}/share/doc/qt-${PV}/" \
			-headerdir "${_prefix}/include/qt5/" \
			-plugindir "${_prefix}/lib/qt5/plugins/" \
			-importdir "${_prefix}/lib/qt5/imports/" \
			-qmldir "${_prefix}/share/qt5/qml/" \
			-archdatadir "${_prefix}/share/qt5/" \
			-libexecdir "${_prefix}/bin/" \
			-datadir "${_prefix}/share/qt5/" \
			-translationdir "${_prefix}/share/qt5/translations/" \
			-examplesdir "${_prefix}/share/qt5/examples/" \
			-testsdir "${_prefix}/share/qt5/tests/" \
			-release -opensource -confirm-license -shared \
			-nomake examples -accessibility \
			-plugin-sql-sqlite -plugin-sql-odbc -plugin-sql-psql  -plugin-sql-mysql \
			-platform win32-g++ -opengl desktop \
			-system-libpng -system-libjpeg -system-zlib -system-pcre \
			-system-freetype -system-harfbuzz -system-sqlite \
			-fontconfig -icu -dbus -ssl -openssl \
			-strip \
			${qt_add_includes}
	if [ $? -eq 0 ]
	then
		einfo "configure successfull"
	else
		eerror "configure failed"
	fi
}

patch_qt5_binary()
{
	local prefix_w=`posix_w32path "${PREFIX}"`
	qt5-pathfix \
			--prefix "${prefix_w}" \
			--extprefix "${prefix_w}" \
			--docdir "${prefix_w}/share/doc/qt-${PV}" \
			--headerdir "${prefix_w}/include/qt5" \
			--libdir "${prefix_w}/lib/qt5" \
			--libexecdir "${prefix_w}/bin" \
			--bindir "${prefix_w}/bin" \
			--plugindir "${prefix_w}/lib/qt5/plugins" \
			--importdir "${prefix_w}/lib/qt5/imports" \
			--qmldir "${prefix_w}/share/qt5/qml" \
			--archdatadir "${prefix_w}/share/qt5" \
			--datadir "${prefix_w}/share/qt5" \
			--translationdir "${prefix_w}/share/qt5/translations" \
			--examplesdir "${prefix_w}/share/qt5/examples" \
			--testsdir "${prefix_w}/share/qt5/tests" \
			--fieldsize 288 \
			"${1}"
}

src_install()
{
	make install
	if [ $? -eq 0 ]
	then
		eend "make install successfull."
	else
		eerror "make install failed!"
	fi

	#Move cmake files...
	mv "${INSTDIR}${PREFIX}/lib/qt5/cmake/" "${INSTDIR}${PREFIX}/lib/" || die "mv cmake files failed!"
	local configFiles=`find "${INSTDIR}${PREFIX}/lib/cmake/" -name "*Config.cmake"`
	for f in ${configFiles}
	do
		echo "Fixing file ${f}"
		sed -i "${f}" -e "s|^get_filename_component(\(.*\)\ \"\${CMAKE_CURRENT_LIST_DIR}/\.\./\.\./\.\./\.\./\"\ ABSOLUTE)$|get_filename_component(\1 \"\${CMAKE_CURRENT_LIST_DIR}/\.\./\.\./\.\./\" ABSOLUTE)|"
	done

	#Move pkg-config files...
	mv "${INSTDIR}${PREFIX}/lib/qt5/pkgconfig/" "${INSTDIR}${PREFIX}/lib/" || die "mv pkg-config files failed!"
	local pkgconfigFiles=`find "${INSTDIR}${PREFIX}/lib/pkgconfig/" -name "*.pc"`
	for f in ${pkgconfigFiles}
	do
		echo "Fixing file ${f}"
		sed -i "${f}" -e "s|^prefix=.*$|prefix=${PREFIX}|"
	done

	local _prefix="${INSTDIR}${PREFIX}"
	local patch_files="bin/qmake.exe bin/Qt5Core.dll"
	local _file=
	for _file in ${patch_files}
	do
		patch_qt5_binary "${_prefix}/${_file}"
	done
}

pkg_postinst()
{
	# For instalation from binary.
	local patch_files="bin/qmake.exe bin/Qt5Core.dll"
	local _file=
	for _file in ${patch_files}
	do
		patch_qt5_binary "${PREFIX}/${_file}"
	done
}

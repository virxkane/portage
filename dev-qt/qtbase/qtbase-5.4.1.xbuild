# Copyright 2013-2015 Chernov A.A.
# Distributed under the terms of the GNU General Public License v2

DESCRIPTION="Qt toolkit (base module)"

HOMEPAGE="http://www.qt.io/"

LICENSE="LGPL-2.1 GPL-3"

RESTRICT="strip"

DEPEND="dev-util/qt5-pathfix
		dev-lang/perl
		meta-virtual/pkg-config"
RDEPEND="sys-libs/zlib
		dev-libs/icu
		dev-libs/libpcre
		media-libs/libpng
		meta-virtual/jpeg
		media-libs/libmng
		media-libs/harfbuzz
		media-libs/freetype
		dev-db/postgresql-libpq
		dev-db/mysql-connector-c
		sys-apps/dbus"

MY_P=${PN}-opensource-src-${PV}

SRC_URI="http://download.qt.io/official_releases/qt/5.4/${PV}/submodules/${MY_P}.tar.xz"

SOURCES_DIR="${MY_P}"

PATH="${PERL_PATH}/bin":${PATH}

src_prepare()
{
	epatch "${PN}-5.3.2-system-freetype.patch"
}

src_configure()
{
	local prefix_w=`posix_w32path "${PREFIX}"`
	prefix_w=`echo ${prefix_w} | sed -e 's/\\//\\\/g'`
	local perl_w=`posix_w32path "${PERL_PATH}"`
	perl_w=`echo ${perl_w} | sed -e 's/\\//\\\/g'`

	# add arguments to configure for dbus
	local dbus_cflags=`pkg-config --cflags dbus-1`
	local freetype2_cflags=`pkg-config --cflags freetype2`
	local flag=
	local qt_add_includes=
	for flag in $dbus_cflags
	do
		flag=`echo ${flag} | sed -e s'/^-I\(.*\)$/\1/'`
		if [ "${flag}" ]
		then
			echo "${flag}"
			qt_add_includes="${qt_add_includes} -I ${flag}"
		fi
	done
	for flag in $freetype2_cflags
	do
		flag=`echo ${flag} | sed -e s'/^-I\(.*\)$/\1/'`
		if [ "${flag}" ]
		then
			echo "${flag}"
			qt_add_includes="${qt_add_includes} -I ${flag}"
		fi
	done
	unset -v dbus_cflags
	unset -v freetype2_cflags
	unset -v flag

	echo "set PATH=%SystemRoot%\system32;%SystemRoot%;${perl_w}\bin;${prefix_w}\bin" > bconf.cmd
	echo "echo . > .gitignore" >> bconf.cmd
	echo "call configure.bat -help" >> bconf.cmd
	echo "del /q .gitignore" >> bconf.cmd
	echo "exit" >> bconf.cmd
	cmd //C bconf.cmd
	#rm -f bconf.cmd

	local _prefix="${INSTDIR}${PREFIX}"
	install -d "${_prefix}"

	#	-prefix ${_prefix} -bindir "${_prefix}/bin" -libdir "${_prefix}/lib/qt5" \
	#	-docdir "${_prefix}/share/doc/qt-${PV}" -headerdir "${_prefix}/include/qt5" \
	#	-plugindir "${_prefix}/lib/qt5/plugins" -importdir "${_prefix}/lib/qt5/imports" \
	#	-datadir "${_prefix}/share/qt5" -translationdir "${_prefix}/share/qt5/translations" \
	#	-examplesdir "${_prefix}/share/qt5/examples" -testsdir "${_prefix}/share/qt5/tests" \

	_prefix=${_prefix}/qt5
	./configure.exe -prefix ${_prefix} \
		-release -opensource -confirm-license -shared -ltcg -rtti \
		-nomake examples -accessibility -largefile \
		-plugin-sql-sqlite -plugin-sql-odbc -plugin-sql-psql  -plugin-sql-mysql \
		-platform win32-g++ -opengl desktop \
		-system-libpng -system-libjpeg -system-zlib -system-pcre \
		-system-freetype -system-harfbuzz \
		-iconv -icu -dbus-linked -openssl \
		-strip \
		${qt_add_includes}
	if [ $? -eq 0 ]
	then
		einfo "configure successfull"
	else
		eerror "configure failed"
	fi
}

src_install()
{
	make install
	if [ $? -eq 0 ]
	then
		eend "make install successfull."
	else
		eerror "make install failed!"
	fi
}

pkg_postinst()
{
	local _prefix="${PREFIX}/qt5"
	local prefix_w=`posix_w32path "${PREFIX}/qt5"`

	qt5-pathfix --prefix="${prefix_w}" \
				"${_prefix}/bin/qmake.exe"
	qt5-pathfix --prefix="${prefix_w}" \
				"${_prefix}/bin/Qt5Core.dll"
}

diff -urBb zip31c-orig/zip.h zip31c/zip.h
--- zip31c-orig/zip.h	2010-06-08 08:25:24.000000000 +0400
+++ zip31c/zip.h	2022-05-10 13:52:39.759887300 +0400
@@ -275,8 +275,8 @@
 #define EB_UX2_VALID      (1 << 8)      /* UID/GID present */
 
 /* ASCII definitions for line terminators in text files: */
-#define LF     10        /* '\n' on ASCII machines; must be 10 due to EBCDIC */
-#define CR     13        /* '\r' on ASCII machines; must be 13 due to EBCDIC */
+#define LF_CODE           10    /* '\n' on ASCII machines; must be 10 due to EBCDIC */
+#define CR_CODE           13    /* '\r' on ASCII machines; must be 13 due to EBCDIC */
 #define CTRLZ  26        /* DOS & OS/2 EOF marker (used in fileio.c, vms.c) */
 
 /* return codes of password fetches (negative: user abort; positive: error) */
Only in zip31c: zip.h.orig
diff -urBb zip31c-orig/zipup.c zip31c/zipup.c
--- zip31c-orig/zipup.c	2010-06-17 07:58:04.000000000 +0400
+++ zip31c/zipup.c	2022-05-10 13:53:40.303110000 +0400
@@ -1467,7 +1467,7 @@
             char c;
 
             if ((c = *b++) == '\n') {
-               *buf++ = CR; *buf++ = LF; len++;
+               *buf++ = CR_CODE; *buf++ = LF_CODE; len++;
             } else {
               *buf++ = (char)ascii[(uch)c];
             }
@@ -1477,7 +1477,7 @@
 #endif /* EBCDIC */
       {
          do {
-            if ((*buf++ = *b++) == '\n') *(buf-1) = CR, *buf++ = LF, len++;
+            if ((*buf++ = *b++) == '\n') *(buf-1) = CR_CODE, *buf++ = LF_CODE, len++;
          } while (--size != 0);
       }
       buf -= len;
@@ -1510,7 +1510,7 @@
             if ((c = *b++) == '\r' && *b == '\n') {
                len--;
             } else {
-               *buf++ = (char)(c == '\n' ? LF : ascii[(uch)c]);
+               *buf++ = (char)(c == '\n' ? LF_CODE : ascii[(uch)c]);
             }
          } while (--size != 0);
       }
@@ -1518,7 +1518,7 @@
 #endif /* EBCDIC */
       {
          do {
-            if (( *buf++ = *b++) == CR && *b == LF) buf--, len--;
+            if (( *buf++ = *b++) == CR_CODE && *b == LF_CODE) buf--, len--;
          } while (--size != 0);
       }
       if (len == 0) {
@@ -1526,7 +1526,7 @@
          bytes_read_this_entry += len;
 #ifdef EBCDIC
          if (aflag == ASCII) {
-            *buf = (char)(*buf == '\n' ? LF : ascii[(uch)(*buf)]);
+            *buf = (char)(*buf == '\n' ? LF_CODE : ascii[(uch)(*buf)]);
          }
 #endif
       } else {

diff -urBbN zstd-1.5.6-orig/Makefile.am zstd-1.5.6/Makefile.am
--- zstd-1.5.6-orig/Makefile.am	1970-01-01 04:00:00.000000000 +0400
+++ zstd-1.5.6/Makefile.am	2024-06-26 23:35:21.004489600 +0400
@@ -0,0 +1,6 @@
+ACLOCAL_AMFLAGS = -I m4
+#SUBDIRS = examples lib programs tests
+SUBDIRS = lib programs
+
+pkgconfig_DATA  = lib/libzstd.pc
+pkgconfigdir    = ${libdir}/pkgconfig
diff -urBbN zstd-1.5.6-orig/configure.ac zstd-1.5.6/configure.ac
--- zstd-1.5.6-orig/configure.ac	1970-01-01 04:00:00.000000000 +0400
+++ zstd-1.5.6/configure.ac	2024-06-26 23:36:05.755985600 +0400
@@ -0,0 +1,126 @@
+AC_PREREQ([2.57])
+AC_INIT([zstd],[1.5.6])
+AC_CONFIG_MACRO_DIR([m4])
+AC_CONFIG_SRCDIR([lib/common/zstd_common.c])
+AM_INIT_AUTOMAKE([no-define foreign])
+
+AC_PROG_CC
+AM_PROG_AS
+AC_PROG_LN_S
+AC_EXEEXT
+LT_INIT
+
+case "${build_os}" in
+	mingw*)
+		build_windows=yes
+		;;
+esac
+
+ac_have_zlib=no
+AC_ARG_WITH([zlib], AS_HELP_STRING([--with-zlib], [building zstd with .gz compression support]),[],[with_zlib=auto])
+if test "x$with_zlib" = "xyes" -o "x$with_zlib" = "xauto"
+then
+   PKG_CHECK_MODULES([ZLIB], [zlib], [ac_have_zlib=yes], [ac_have_zlib=no])
+fi
+if test "x$with_zlib" = "xyes" -a "x$ac_have_zlib" != "xyes"
+then
+	AC_MSG_ERROR([zlib is required])
+fi
+
+ac_have_liblzma=no
+AC_ARG_WITH([liblzma], AS_HELP_STRING([--with-liblzma], [building zstd with .xz/.lzma compression support]),[],[with_liblzma=auto])
+if test "x$with_liblzma" = "xyes" -o "x$with_liblzma" = "xauto"
+then
+   PKG_CHECK_MODULES([LIBLZMA], [liblzma], [ac_have_liblzma=yes], [ac_have_liblzma=no])
+fi
+if test "x$with_liblzma" = "xyes" -a "x$ac_have_liblzma" != "xyes"
+then
+	AC_MSG_ERROR([liblzma is required])
+fi
+
+ac_have_liblz4=no
+AC_ARG_WITH([liblz4], AS_HELP_STRING([--with-liblz4], [building zstd with .lz4 compression support ]),[],[with_liblz4=auto])
+if test "x$with_liblz4" = "xyes" -o "x$with_liblz4" = "xauto"
+then
+   PKG_CHECK_MODULES([LIBLZ4], [liblz4], [ac_have_liblz4=yes], [ac_have_liblz4=no])
+fi
+if test "x$with_liblz4" = "xyes" -a "x$ac_have_liblz4" != "xyes"
+then
+	AC_MSG_ERROR([liblz4 is required])
+fi
+
+AC_ARG_ENABLE([compression],
+				[AS_HELP_STRING([--enable-compression],
+					[enable compression support (default is yes)])],
+				[ac_enable_compession=$enableval],
+				[ac_enable_compession=yes])
+
+AC_ARG_ENABLE([decompression],
+				[AS_HELP_STRING([--enable-decompression],
+					[enable decompression support (default is yes)])],
+				[ac_enable_decompession=$enableval],
+				[ac_enable_decompession=yes])
+
+AC_ARG_ENABLE([dictbuilder],
+				[AS_HELP_STRING([--enable-dictbuilder],
+					[enable dictbuilder support (default is yes)])],
+				[ac_enable_dictbuilder=$enableval],
+				[ac_enable_dictbuilder=yes])
+
+AC_ARG_ENABLE([deprecated],
+				[AS_HELP_STRING([--enable-deprecated],
+					[enable deprecated stuff (default is no)])],
+				[ac_enable_deprecated=$enableval],
+				[ac_enable_deprecated=no])
+
+AC_ARG_ENABLE([amd64-asm-decompressor],
+				[AS_HELP_STRING([--enable-amd64-asm-decompressor],
+					[use AMD64 assembler code for decompression (default is no)])],
+				[ac_enable_amd64_asm_decompressor=$enableval],
+				[ac_enable_amd64_asm_decompressor=no])
+
+AC_ARG_ENABLE([multithreading],
+				[AS_HELP_STRING([--enable-multithreading],
+					[multithreading support (default is yes)])],
+				[ac_enable_multithreading=$enableval],
+				[ac_enable_multithreading=yes])
+
+dnl multithreading support in ZSTD for Windows don\'t use pthreads
+if test "x$ac_enable_multithreading" = "xyes"
+then
+	if test "x$build_windows" != "xyes"
+	then
+		AX_PTHREAD([ac_have_pthread=yes], [ac_have_pthread=no])
+		if test "x$ac_have_pthread" = "xyes"
+		then
+			LIBS="$PTHREAD_LIBS $LIBS"
+			CFLAGS="$CFLAGS $PTHREAD_CFLAGS"
+			CXXFLAGS="$CXXFLAGS $PTHREAD_CFLAGS"
+			CC="$PTHREAD_CC"
+			CXX="$PTHREAD_CXX"
+		else
+			AC_MSG_ERROR([libpthread is required])
+		fi
+	fi
+	CFLAGS="$CFLAGS -DZSTD_MULTITHREAD"
+	CXXFLAGS="$CXXFLAGS -DZSTD_MULTITHREAD"
+fi
+
+AM_CONDITIONAL([ZSTD_LIB_COMPRESSION], [test x$ac_enable_compession = xyes])
+AM_CONDITIONAL([ZSTD_LIB_DECOMPRESSION], [test x$ac_enable_decompession = xyes])
+AM_CONDITIONAL([ZSTD_LIB_DICTBUILDER], [test x$ac_enable_dictbuilder = xyes])
+AM_CONDITIONAL([ZSTD_LIB_DEPRECATED], [test x$ac_enable_deprecated = xyes])
+AM_CONDITIONAL([ZSTD_LIB_DEPRECATED], [test x$ac_enable_deprecated = xyes])
+AM_CONDITIONAL([ZSTD_NO_ASM], [test x$ac_enable_amd64_asm_decompressor != xyes])
+AM_CONDITIONAL([ZSTD_MULTITHREADING], [test x$ac_enable_multithreading != xyes])
+
+AM_CONDITIONAL([IS_GNU_CC], [test x$GCC = xyes])
+AM_CONDITIONAL([BUILD_OS_WIN32], [test x$build_windows = xyes])
+AM_CONDITIONAL([HAVE_ZLIB], [test x$ac_have_zlib = xyes])
+AM_CONDITIONAL([HAVE_LZMA], [test x$ac_have_liblzma = xyes])
+AM_CONDITIONAL([HAVE_LZ4], [test x$ac_have_liblz4 = xyes])
+
+#AC_CONFIG_FILES([Makefile examples/Makefile lib/Makefile programs/Makefile tests/Makefile])
+AC_CONFIG_FILES([Makefile lib/Makefile programs/Makefile])
+AC_CONFIG_FILES([lib/libzstd.pc])
+AC_OUTPUT
diff -urBbN zstd-1.5.6-orig/lib/Makefile.am zstd-1.5.6/lib/Makefile.am
--- zstd-1.5.6-orig/lib/Makefile.am	1970-01-01 04:00:00.000000000 +0400
+++ zstd-1.5.6/lib/Makefile.am	2024-06-26 23:35:21.007481600 +0400
@@ -0,0 +1,86 @@
+include_HEADERS = \
+	zstd.h \
+	zstd_errors.h \
+	zdict.h
+
+AUTOMAKE_OPTIONS = subdir-objects
+
+lib_LTLIBRARIES = libzstd.la
+
+libzstd_la_CFLAGS = -W -Wall -DXXH_NAMESPACE=ZSTD_
+libzstd_la_LDFLAGS = -no-undefined -version-info 1
+
+if ZSTD_NO_ASM
+libzstd_la_CFLAGS += -DZSTD_DISABLE_ASM
+endif
+
+ZSTD_COMMON_FILES = \
+	common/debug.c \
+	common/entropy_common.c \
+	common/error_private.c \
+	common/fse_decompress.c \
+	common/pool.c \
+	common/threading.c \
+	common/xxhash.c \
+	common/zstd_common.c
+
+ZSTD_COMPRESS_FILES = \
+	compress/fse_compress.c \
+	compress/hist.c \
+	compress/huf_compress.c \
+	compress/zstd_compress.c \
+	compress/zstd_compress_literals.c \
+	compress/zstd_compress_sequences.c \
+	compress/zstd_compress_superblock.c \
+	compress/zstd_double_fast.c \
+	compress/zstd_fast.c \
+	compress/zstd_lazy.c \
+	compress/zstd_ldm.c \
+	compress/zstd_opt.c \
+	compress/zstdmt_compress.c
+
+ZSTD_DECOMPRESS_FILES = \
+	decompress/huf_decompress.c \
+	decompress/zstd_ddict.c \
+	decompress/zstd_decompress.c \
+	decompress/zstd_decompress_block.c
+
+ZSTD_DECOMPRESS_AMD64_ASM_FILES = \
+	decompress/huf_decompress_amd64.S
+
+if !ZSTD_NO_ASM
+ZSTD_DECOMPRESS_FILES += $(ZSTD_DECOMPRESS_AMD64_ASM_FILES)
+endif
+
+ZSTD_DICTBUILDER_FILES = \
+	dictBuilder/cover.c \
+	dictBuilder/divsufsort.c \
+	dictBuilder/fastcover.c \
+	dictBuilder/zdict.c
+
+ZSTD_DEPRECATED_FILES = \
+	deprecated/zbuff_common.c \
+	deprecated/zbuff_compress.c \
+	deprecated/zbuff_decompress.c
+
+libzstd_la_SOURCES = $(ZSTD_COMMON_FILES)
+
+if ZSTD_LIB_COMPRESSION
+libzstd_la_SOURCES += $(ZSTD_COMPRESS_FILES)
+endif
+
+if ZSTD_LIB_DECOMPRESSION
+libzstd_la_SOURCES += $(ZSTD_DECOMPRESS_FILES)
+endif
+
+if ZSTD_LIB_DICTBUILDER
+libzstd_la_SOURCES += $(ZSTD_DICTBUILDER_FILES)
+endif
+
+if ZSTD_LIB_DEPRECATED
+libzstd_la_SOURCES += $(ZSTD_DEPRECATED_FILES)
+endif
+
+EXTRA_DIST = \
+	BUCK \
+	README.md
diff -urBbN zstd-1.5.6-orig/lib/libzstd.pc.in zstd-1.5.6/lib/libzstd.pc.in
--- zstd-1.5.6-orig/lib/libzstd.pc.in	2024-03-22 02:05:51.000000000 +0400
+++ zstd-1.5.6/lib/libzstd.pc.in	2024-06-26 23:35:21.008478900 +0400
@@ -2,10 +2,10 @@
 #   Copyright (c) Meta Platforms, Inc. and affiliates.
 #   BSD 2-Clause License (https://opensource.org/licenses/bsd-license.php)
 
-prefix=@PREFIX@
-exec_prefix=@EXEC_PREFIX@
-includedir=@INCLUDEDIR@
-libdir=@LIBDIR@
+prefix=@prefix@
+exec_prefix=@exec_prefix@
+includedir=@includedir@
+libdir=@libdir@
 
 Name: zstd
 Description: fast lossless compression algorithm library
diff -urBbN zstd-1.5.6-orig/programs/Makefile.am zstd-1.5.6/programs/Makefile.am
--- zstd-1.5.6-orig/programs/Makefile.am	1970-01-01 04:00:00.000000000 +0400
+++ zstd-1.5.6/programs/Makefile.am	2024-06-26 23:52:50.970691500 +0400
@@ -0,0 +1,61 @@
+
+bin_PROGRAMS = zstd
+
+zstd_CFLAGS =
+zstd_LIBS =
+zstd_LDADD = $(LDADD) $(top_builddir)/lib/libzstd.la
+
+if IS_GNU_CC
+zstd_CFLAGS += -falign-loops=32
+endif
+
+if HAVE_ZLIB
+zstd_CFLAGS += $(ZLIB_CFLAGS) -DZSTD_GZCOMPRESS -DZSTD_GZDECOMPRESS
+zstd_LDADD += $(ZLIB_LIBS)
+endif
+
+if HAVE_LZMA
+zstd_CFLAGS += $(LIBLZMA_CFLAGS) -DZSTD_LZMACOMPRESS -DZSTD_LZMADECOMPRESS
+zstd_LDADD += $(LIBLZMA_LIBS)
+endif
+
+if HAVE_LZ4
+zstd_CFLAGS += $(LIBLZ4_CFLAGS) -DZSTD_LZ4COMPRESS -DZSTD_LZ4DECOMPRESS 
+zstd_LDADD += $(LIBLZ4_LIBS)
+endif
+
+zstd_SOURCES = \
+	benchfn.c \
+	benchzstd.c \
+	datagen.c \
+	dibio.c \
+	fileio.c \
+	fileio_asyncio.c \
+	lorem.c \
+	timefn.c \
+	util.c \
+	zstdcli.c \
+	zstdcli_trace.c
+
+EXTRA_DIST = \
+	BUCK \
+	README.md
+
+DISTMANS= zstd.1 zstdgrep.1 zstdless.1
+
+# Manual pages to install
+man_MANS = $(DISTMANS)
+
+install-data-local:
+	${LN_S} zstd$(EXEEXT) $(DESTDIR)$(bindir)/zstdcat$(EXEEXT)
+	${LN_S} zstd$(EXEEXT) $(DESTDIR)$(bindir)/unzstd$(EXEEXT)
+	${LN_S} zstd$(EXEEXT) $(DESTDIR)$(bindir)/zstdmt$(EXEEXT)
+	$(INSTALL_SCRIPT) $(srcdir)/zstdless $(DESTDIR)$(bindir)/zstdless
+	$(INSTALL_SCRIPT) $(srcdir)/zstdgrep $(DESTDIR)$(bindir)/zstdgrep
+
+uninstall-local:
+	rm -f $(DESTDIR)$(bindir)/zstdcat$(EXEEXT)
+	rm -f $(DESTDIR)$(bindir)/unzstd$(EXEEXT)
+	rm -f $(DESTDIR)$(bindir)/zstdmt$(EXEEXT)
+	rm -f $(DESTDIR)$(bindir)/zstdless
+	rm -f $(DESTDIR)$(bindir)/zstdgrep
